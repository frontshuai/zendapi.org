<%
let module = page.module;
let mpaths = [];
let modules = page.modules;
let parent = modules[module.parent];
let objectPrototype = Object.prototype;
let toString = objectPrototype.toString;
while(parent) {
    mpaths.unshift({
        name: parent.name,
        url: url_for_api_entity(parent.refid)
    });
    parent = modules[parent.parent];
}
let catalog = site.data['api/catalog'];
let moduleIndex = catalog.apimodules;
mpaths.unshift({
    name: moduleIndex.name,
    url: url_for(moduleIndex.url)
});
module.modules.map(function(submodule){
    submodule.url = url_for_api_entity(submodule.refid);
});
module.classes.map(function(cls){
    cls.url = url_for_api_entity(cls.refid);
});
module.defines.map(function(macro){
    macro.url = url_for_entity_detail(macro.containerId, macro.id);
    if (macro.params) {
        macro.paramsString = [];
        macro.params.map(function (param)
        {
            macro.paramsString.push(param.defname);
        });
        macro.paramsString = macro.paramsString.join(", ");
    }
});
module.typedefs.map(function(typedef){
    typedef.url = url_for_entity_detail(typedef.containerId, typedef.id);
    typedef.definition = typedef.definition.replace(typedef.name,
            "<a href='"+typedef.url+"'>"+typedef.name+"</a>");
    // 替换type
    if (typedef.refs && is_array(typedef.refs)) {
        typedef.refs.map(function(item){
            if (item.kindref == "member") {
                item.url = url_for_entity_detail(item.containerId, item.id)
            } else {
                item.url = url_for_api_entity(item.refid);
            }
            typedef.definition = typedef.definition.replace(item.name,
                    "<a href='"+item.url+"'>"+item.name+"</a>");
        });
    }
});
module.enums.map(function(enumitem){
    enumitem.url = url_for_entity_detail(enumitem.containerId, enumitem.id);
});
module.funcs.map(function(func){
    func.url = url_for_entity_detail(func.containerId, func.id);
    func.signature = func.signature.replace(/\{cls\}/g, "");
    if (func.isTemplate) {
        func.tplParamsString = [];
        func.templateParams.map(function(param){
            if (param.defValue) {
                func.tplParamsString.push(param.type + " = " + param.defValue);
            } else {
                func.tplParamsString.push(param.type);
            }
        });
        func.tplParamsString = func.tplParamsString.join(", ");
        func.tplParamsString = func.tplParamsString.replace(/\{cls\}/g, "");
    }
});
module.mpaths = mpaths;
%>

window.API_MODULE_CONTENT_DATA = <%- JSON.stringify(module)%>